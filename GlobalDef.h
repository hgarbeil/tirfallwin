#pragma once

typedef int (*pCameraCallback)(unsigned short *pushData, unsigned int iW, unsigned int iH, void *pThis);

enum eError
{
   eNO_ERROR = 0,
   eERROR_TIMEOUT,
   eERROR_ALREADY_INITIALIZED,
   eERROR_NOT_INITIALIZED,
   eERROR_UNABLE_LOAD_CAMERA_DLL,
   eERROR_UNABLE_INIT_CAMERA_DLL,
   eERROR_INVALID_CAMERA_DLL,
   eERROR_COMMAND_CAMERA_FAIL,
   eERROR_COMMAND_CAMERA_PROCESS_FAIL,
   eERROR_COMMAND_INVALID_INPUT_PARAM,
   eERROR_CAMERA_IMAGE_ALREADY_REQUESTED,
   eERROR_CAMERA_IMAGE_TIMEOUT,
   eERROR_CAMERA_IMAGE,

   eERROR_CAMERA_OFFSET_ALREADY_IN_PROGRESS,
   eERROR_CAMERA_UNABLE_GET_FPABIAS,
   eERROR_CAMERA_UNABLE_LOAD_RPL_FILE,
   eERROR_CAMERA_INVALID_RPL_FILE,
   eERROR_CAMERA_ERROR_PROCESS_RPL_FILE,
};


#define DEF_CAM_MAX_WIDTH  384
#define DEF_CAM_MAX_HEIGHT 288


#define DAC_STATE_DEFAULT     0
#define DAC_STATE_FIXED_DATA  1
#define DAC_STATE_TABLE_DATA  2
#define DAC_STATE_MAX         2

//fn_SetRAWProcessOption
#define PROCESS_RAW  					0
#define PROCESS_OFFSET					1
#define PROCESS_GAIN_OFFSET				2
#define PROCESS_GAIN_OFFSET_BAD_PIXEL	3
#define PROCESS_PIXEL_REP_TABLE     	4
